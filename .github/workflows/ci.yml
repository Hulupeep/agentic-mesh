name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-rust:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [ '1.75', 'stable' ]
        node: [ '18', '20' ]
    steps:
    - uses: actions/checkout@v4
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
    - name: Install pnpm
      run: npm install -g pnpm
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          kernel/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache Node dependencies
      uses: actions/cache@v3
      with:
        path: |
          adapters/node_modules
          spec-ts/node_modules
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Install Rust dependencies
      run: cd kernel && cargo check
    - name: Install Node dependencies
      run: |
        cd adapters && pnpm install
        cd ../spec-ts && pnpm install
    - name: Build kernel
      run: cd kernel && cargo build --verbose
    - name: Build adapters
      run: cd adapters && pnpm build
    - name: Run kernel tests
      run: cd kernel && cargo test --verbose

  test-node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [ '18', '20' ]
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
    - name: Install pnpm
      run: npm install -g pnpm
    - name: Cache Node dependencies
      uses: actions/cache@v3
      with:
        path: |
          adapters/node_modules
          spec-ts/node_modules
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
    - name: Install dependencies
      run: |
        cd adapters && pnpm install
        cd ../spec-ts && pnpm install
    - name: Build adapters
      run: |
        cd adapters && pnpm build
        cd ../spec-ts && pnpm build
    - name: Run linters/tests if available
      run: |
        cd adapters && pnpm test || echo "No tests defined for adapters"
        cd ../spec-ts && pnpm test || echo "No tests defined for spec-ts"

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build kernel Docker image
      run: |
        docker build -f Dockerfile.kernel -t amp-kernel .
    - name: Build adapters Docker image
      run: |
        docker build -f Dockerfile.adapters -t amp-adapters .
    - name: Run docker-compose
      run: |
        docker-compose up -d --build
        sleep 10
        docker-compose ps
        docker-compose logs
        docker-compose down